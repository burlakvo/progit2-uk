[[_git_aliases]]
=== Псевдоніми Git

(((aliases)))
<<<<<<< book/02-git-basics/sections/aliases.asc-ukr
До того, як завершити розділ про базовий Git, є ще одна маленька підказка, щоб зробити ваше користування Git простішим, легшим та більш знайомим: псевдоніми.
Ми більше не будемо про них згадувати та будемо вважати, що ви використовуєте їх самостійно в решті книги, проте напевно вам слід знати, як їх використовувати.
=======
Before we move on to the next chapter, we want to introduce a feature that can make your Git experience simpler, easier, and more familiar: aliases.
For clarity's sake, we won't be using them anywhere else in this book, but if you go on to use Git with any regularity, aliases are something you should know about.
>>>>>>> book/02-git-basics/sections/aliases.asc-cur-eng

Git сам не намагається здогадатись, яку команду ви набрали, якщо ви набрали її частково.
Якщо ви не хочете набирати команди Git повністю, ви легко можете налаштувати псевдоніми для кожної команди за допомогою `git config`.(((git commands, config)))
Ось декілька прикладів як це можна зробити:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Це означає, що, наприклад, замість `git commit` ви можете набрати просто `git ci`.
З часом, ви напевно почнете використовувати й інші команди часто. Не вагайтесь створювати нові псевдоніми.

Ця техніка також може бути дуже корисною для створення нових команд, які ви гадаєте мають існувати.
Наприклад, щоб виправити незручність, яку ми бачили при скасуванні змін до файлу, ви можете додати свою власну команду unstage (видалити з індексу) до Git:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Після цього наступні команди еквівалентні:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Це здається трохи яснішим.
Також нерідко додають команду `last` (останній), ось так:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Тепер ви легко можете побачити останній коміт:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    Test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Як ви напевно зрозуміли, Git просто підставляє замість псевдоніму його значення.
Проте, можливо ви бажаєте виконати зовнішню команду, а не команду Git.
У цьому разі, треба почати команду зі знаку оклику `!`.
Це корисно, якщо ви бажаєте створити власні інструменти для роботи зі сховищем Git.
Ми продемонструємо це, створивши псевдонім `git visual` для виконання `gitk`:

[source,console]
----
$ git config --global alias.visual '!gitk'
----
